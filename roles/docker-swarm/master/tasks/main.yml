#############################################################################
# Author(s):
#     Juhapekka Piiroinen <juhapekka.piiroinen@1337.fi>
#
# License: MIT
#
# (C) 2019 Juhapekka Piiroinen <juhapekka.piiroinen@1337.fi>
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#############################################################################
---
- name: "Initialize docker swarm"
  block:
    - name: "Ensure that docker swarm is recreated"
      docker_swarm:
        state: absent
        force: true
    - name: "Initialize docker swarm"
      docker_swarm:
        state: present
      register: swarm_info
    - set_fact:
        swarm_facts_tokens: "{{ swarm_info.swarm_facts.JoinTokens }}"
  rescue:
    - meta: end_play

# Save these values into a file
- name: Save swarm-master settings to group_vars
  delegate_to: localhost
  block:
    - shell: ansible-vault encrypt_string '{{ swarm_info.swarm_facts.JoinTokens['Worker'] }}' --name swarm_join_token_worker
      register: swarm_join_token_worker_value
    - shell: ansible-vault encrypt_string '{{ swarm_info.swarm_facts.JoinTokens['Manager'] }}' --name swarm_join_token_manager
      register: swarm_join_token_manager_value
    - shell: ansible-vault encrypt_string '{{ swarm_master_address }}' --name swarm_master_address
      register: swarm_master_address_value
    - copy:
        dest: group_vars/all/swarm_master_address
        content: "{{ swarm_master_address_value.stdout }}"
    - copy:
        dest: group_vars/all/swarm_join_token_worker
        content: "{{ swarm_join_token_worker_value.stdout }}"
    - copy:
        dest: group_vars/all/swarm_join_token_manager
        content: "{{ swarm_join_token_manager_value.stdout }}"

